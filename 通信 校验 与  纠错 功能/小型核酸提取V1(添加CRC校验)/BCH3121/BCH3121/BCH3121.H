#ifndef __BCH3121_HEADER__
#define	__BCH3121_HEADER__


#define		BCH_LENGTH_GENERATPLOY		11	//	length of generator polynomial
#define		BCH_LENGTH_CODEWORD			32
#define		BCH_LENGTH_INFO				21
#define		BCH_LENGTH_CHECKCODE		10
#define		BCH_CHECK_WRONG				0
#define		BCH_CHECK_RIGTH				1

typedef			unsigned char		uchar;
typedef			unsigned short		uint;
typedef			unsigned short		ushort;
typedef			unsigned long		ulong;

#define			RevBit(data,bit)	(data ^= 1<<(bit))

#define			TRUE				1
#define			FALSE				0

//---------------------------------------------------------
//	
//	对原始数据的某连续的20个位进行编码
//	source	:
//				最前面21位为需要进行编码的内容
//				应该是一个四字节大小的数据的首地址
//	返回	:
//				最前面21位为参数传递的信息+10的BCH校验码+1位奇偶校验位
//
//---------------------------------------------------------
ulong BchEncode(ulong da);

//---------------------------------------------------------
//	
//	执行encode的逆向操作
//	此函数只执行数据是否出错的校验工作，而不对数据进行修正
//	source	:
//				接收到的原始数据
//				应该是一个四字节大小的数据的首地址
//	返回	:
//				1		数据没有发生错误
//				0		数据发生了错误
//---------------------------------------------------------
uchar	BchCheck(ulong da);


//---------------------------------------------------------
//	
//	如果BchCheck()返回错误，则调用下面函数对数据进行修正
//	source	:
//				接收到的已经发生了错误的数据
//				应该是一个四字节大小的数据的首地址
//	返回	:
//				修正以后的正确结果
//				最前面21位为参数传递的信息+10的BCH校验码+1位奇偶校验位
//---------------------------------------------------------
ulong	BchDecode(ulong data);

//---------------------------------------------------------
//	
//	BCH产生校验码过程中对位进行异或去处的迭代处理过程
//                 --------------------------------------------	
// 1110 1101 001  /0100 0011 0000 1100 0011 0000 0000 0000		//	数据1
//                 1110 1101 001								//	数据2
//               -------------------------------------------
//                 0110 1011 001								//	数据3
//	数据是常量，用全局变量控制
//	data	:	
//				数据1的前面BCH_LENGTH_GENERATPLOY位的首地址
//	ret		:
//				数据3的首地址
//
//---------------------------------------------------------
void	BCHXor(uchar *data,uchar *ret,uchar begin);

//---------------------------------------------------------
//	
//	将长整型的数据转换为一个0/1形式长度为32的数据
//	data的最高位转换后成为array的第一个元素
//
//---------------------------------------------------------
void Long2Bytes(ulong data,uchar* array);
#endif